{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-indexed-db\";\nexport class IndexDbService {\n  constructor(dbService) {\n    this.dbService = dbService;\n  }\n  addTodo(todo) {\n    return this.dbService.add('todos', todo);\n  }\n  getTodoById(id) {\n    return this.dbService.getByID('todos', id);\n  }\n  getAllTodos() {\n    return this.dbService.getAll('todos');\n  }\n  updateTodo(todo) {\n    return this.dbService.update('todos', todo);\n  }\n  deleteTodoById(id) {\n    return this.dbService.delete('todos', id);\n  }\n  static #_ = this.ɵfac = function IndexDbService_Factory(t) {\n    return new (t || IndexDbService)(i0.ɵɵinject(i1.NgxIndexedDBService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: IndexDbService,\n    factory: IndexDbService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["IndexDbService","constructor","dbService","addTodo","todo","add","getTodoById","id","getByID","getAllTodos","getAll","updateTodo","update","deleteTodoById","delete","_","i0","ɵɵinject","i1","NgxIndexedDBService","_2","factory","ɵfac","providedIn"],"sources":["/Users/vajk/Desktop/angular-todoapp/src/app/services/index-db.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { Observable } from 'rxjs';\nimport { IToDo } from '../interfaces/globals';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IndexDbService {\n\n  constructor(private dbService: NgxIndexedDBService) {}\n\n\taddTodo(todo: IToDo): Observable<IToDo> {\n\t\treturn this.dbService.add('todos', todo);\n\t}\n\n\tgetTodoById(id: number): Observable<IToDo> {\n\t\treturn this.dbService.getByID<IToDo>('todos', id);\n\t}\n\n\tgetAllTodos(): Observable<IToDo[]> {\n\t\treturn this.dbService.getAll<IToDo>('todos');\n\t}\n\n\tupdateTodo(todo: IToDo): Observable<any> {\n\t\treturn this.dbService.update('todos', todo);\n\t}\n\n\tdeleteTodoById(id: number): Observable<any> {\n\t\treturn this.dbService.delete('todos', id);\n\t}\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,SAA8B;IAA9B,KAAAA,SAAS,GAATA,SAAS;EAAwB;EAEtDC,OAAOA,CAACC,IAAW;IAClB,OAAO,IAAI,CAACF,SAAS,CAACG,GAAG,CAAC,OAAO,EAAED,IAAI,CAAC;EACzC;EAEAE,WAAWA,CAACC,EAAU;IACrB,OAAO,IAAI,CAACL,SAAS,CAACM,OAAO,CAAQ,OAAO,EAAED,EAAE,CAAC;EAClD;EAEAE,WAAWA,CAAA;IACV,OAAO,IAAI,CAACP,SAAS,CAACQ,MAAM,CAAQ,OAAO,CAAC;EAC7C;EAEAC,UAAUA,CAACP,IAAW;IACrB,OAAO,IAAI,CAACF,SAAS,CAACU,MAAM,CAAC,OAAO,EAAER,IAAI,CAAC;EAC5C;EAEAS,cAAcA,CAACN,EAAU;IACxB,OAAO,IAAI,CAACL,SAAS,CAACY,MAAM,CAAC,OAAO,EAAEP,EAAE,CAAC;EAC1C;EAAC,QAAAQ,CAAA,G;qBAtBWf,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,mBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdpB,cAAc;IAAAqB,OAAA,EAAdrB,cAAc,CAAAsB,IAAA;IAAAC,UAAA,EAFb;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}